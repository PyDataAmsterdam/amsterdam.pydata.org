{"version":3,"file":"index.js","names":["loadPlugins","rawConfig","rootDir","config","normalizeConfig","validateConfigPluginsOptions","currentAPIs","getAPI","browser","browserAPIs","node","nodeAPIs","ssr","ssrAPIs","pluginInfos","loadInternalPlugins","pluginArray","flattenPlugins","disablePlugins","store","getState","program","pluginArrayWithoutDisabledPlugins","filter","plugin","disabledInfo","find","entry","name","process","env","GATSBY_WORKER_ID","reporter","warn","reasons","map","line","join","flattenedPlugins","badExports","collatePluginAPIs","handleBadExports","handleMultipleReplaceRenderers","dispatch","type","payload"],"sources":["../../../src/bootstrap/load-plugins/index.ts"],"sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\nimport { store } from \"../../redux\"\nimport { IGatsbyState } from \"../../redux/types\"\nimport * as nodeAPIs from \"../../utils/api-node-docs\"\nimport * as browserAPIs from \"../../utils/api-browser-docs\"\nimport ssrAPIs from \"../../../cache-dir/api-ssr-docs\"\nimport { loadInternalPlugins } from \"./load-internal-plugins\"\nimport {\n  collatePluginAPIs,\n  handleBadExports,\n  handleMultipleReplaceRenderers,\n  validateConfigPluginsOptions,\n} from \"./validate\"\nimport { IFlattenedPlugin } from \"./types\"\nimport { normalizeConfig } from \"./utils/normalize\"\nimport { getAPI } from \"./utils/get-api\"\nimport { flattenPlugins } from \"./utils/flatten-plugins\"\nimport { IGatsbyConfig } from \"../../internal\"\n\nexport async function loadPlugins(\n  rawConfig: IGatsbyConfig,\n  rootDir: string\n): Promise<Array<IFlattenedPlugin>> {\n  // Turn all strings in plugins: [`...`] into the { resolve: ``, options: {} } form\n  const config = normalizeConfig(rawConfig)\n\n  // Show errors for invalid plugin configuration\n  await validateConfigPluginsOptions(config, rootDir)\n\n  const currentAPIs = getAPI({\n    browser: browserAPIs,\n    node: nodeAPIs,\n    ssr: ssrAPIs,\n  })\n\n  // Collate internal plugins, site config plugins, site default plugins\n  const pluginInfos = loadInternalPlugins(config, rootDir)\n\n  // Create a flattened array of the plugins\n  const pluginArray = flattenPlugins(pluginInfos)\n\n  const { disablePlugins } = store.getState().program\n  const pluginArrayWithoutDisabledPlugins = pluginArray.filter(plugin => {\n    const disabledInfo = disablePlugins?.find(\n      entry => entry.name === plugin.name\n    )\n\n    if (disabledInfo) {\n      if (!process.env.GATSBY_WORKER_ID) {\n        // show this warning only once in main process\n        reporter.warn(\n          `Disabling plugin \"${plugin.name}\":\\n${disabledInfo.reasons\n            .map(line => ` - ${line}`)\n            .join(`\\n`)}`\n        )\n      }\n      return false\n    }\n    return true\n  })\n\n  // Work out which plugins use which APIs, including those which are not\n  // valid Gatsby APIs, aka 'badExports'\n  let { flattenedPlugins, badExports } = await collatePluginAPIs({\n    currentAPIs,\n    flattenedPlugins: pluginArrayWithoutDisabledPlugins,\n    rootDir,\n  })\n\n  // Show errors for any non-Gatsby APIs exported from plugins\n  await handleBadExports({ currentAPIs, badExports })\n\n  // Show errors when ReplaceRenderer has been implemented multiple times\n  flattenedPlugins = handleMultipleReplaceRenderers({\n    flattenedPlugins,\n  })\n\n  // If we get this far, everything looks good. Update the store\n  store.dispatch({\n    type: `SET_SITE_FLATTENED_PLUGINS`,\n    payload: flattenedPlugins as IGatsbyState[\"flattenedPlugins\"],\n  })\n\n  return flattenedPlugins\n}\n"],"mappings":";;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAAwD;AAAA;AAGjD,eAAeA,WAAW,CAC/BC,SAAwB,EACxBC,OAAe,EACmB;EAClC;EACA,MAAMC,MAAM,GAAG,IAAAC,0BAAe,EAACH,SAAS,CAAC;;EAEzC;EACA,MAAM,IAAAI,sCAA4B,EAACF,MAAM,EAAED,OAAO,CAAC;EAEnD,MAAMI,WAAW,GAAG,IAAAC,cAAM,EAAC;IACzBC,OAAO,EAAEC,WAAW;IACpBC,IAAI,EAAEC,QAAQ;IACdC,GAAG,EAAEC;EACP,CAAC,CAAC;;EAEF;EACA,MAAMC,WAAW,GAAG,IAAAC,wCAAmB,EAACZ,MAAM,EAAED,OAAO,CAAC;;EAExD;EACA,MAAMc,WAAW,GAAG,IAAAC,8BAAc,EAACH,WAAW,CAAC;EAE/C,MAAM;IAAEI;EAAe,CAAC,GAAGC,YAAK,CAACC,QAAQ,EAAE,CAACC,OAAO;EACnD,MAAMC,iCAAiC,GAAGN,WAAW,CAACO,MAAM,CAACC,MAAM,IAAI;IACrE,MAAMC,YAAY,GAAGP,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEQ,IAAI,CACvCC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAKJ,MAAM,CAACI,IAAI,CACpC;IAED,IAAIH,YAAY,EAAE;MAChB,IAAI,CAACI,OAAO,CAACC,GAAG,CAACC,gBAAgB,EAAE;QACjC;QACAC,iBAAQ,CAACC,IAAI,CACV,qBAAoBT,MAAM,CAACI,IAAK,OAAMH,YAAY,CAACS,OAAO,CACxDC,GAAG,CAACC,IAAI,IAAK,MAAKA,IAAK,EAAC,CAAC,CACzBC,IAAI,CAAE,IAAG,CAAE,EAAC,CAChB;MACH;MACA,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb,CAAC,CAAC;;EAEF;EACA;EACA,IAAI;IAAEC,gBAAgB;IAAEC;EAAW,CAAC,GAAG,MAAM,IAAAC,2BAAiB,EAAC;IAC7DlC,WAAW;IACXgC,gBAAgB,EAAEhB,iCAAiC;IACnDpB;EACF,CAAC,CAAC;;EAEF;EACA,MAAM,IAAAuC,0BAAgB,EAAC;IAAEnC,WAAW;IAAEiC;EAAW,CAAC,CAAC;;EAEnD;EACAD,gBAAgB,GAAG,IAAAI,wCAA8B,EAAC;IAChDJ;EACF,CAAC,CAAC;;EAEF;EACAnB,YAAK,CAACwB,QAAQ,CAAC;IACbC,IAAI,EAAG,4BAA2B;IAClCC,OAAO,EAAEP;EACX,CAAC,CAAC;EAEF,OAAOA,gBAAgB;AACzB"}