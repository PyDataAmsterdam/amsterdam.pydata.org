{"version":3,"file":"build.js","names":["module","exports","build","program","externalTelemetryAttributes","global","__GATSBY","buildId","uuid","v4","root","directory","isTruthy","process","env","VERBOSE","verbose","report","setVerbose","profile","warn","NODE_ENV","updateInternalSiteMetadata","name","sitePackageJson","sitePath","lastRun","Date","now","pid","markWebpackStatusAsPending","publicDir","path","join","initTracer","GATSBY_OPEN_TRACING_CONFIG_FILE","openTracingConfigFile","buildActivity","phantomActivity","start","telemetry","trackCli","signalExit","exitCode","buildSpan","span","setTag","Object","entries","forEach","key","value","gatsbyNodeGraphQLFunction","workerPool","adapterManager","bootstrap","parentSpan","apiRunnerNode","graphql","writeOutRequires","store","closeJavascriptBundleCompilation","closeHTMLBundleCompilation","closePartialHydrationBundleCompilation","webpackAssets","webpackCompilationHash","webpackSSRCompilationHash","templateCompilationHashes","engineBundlingPromises","buildActivityTimer","activityTimer","stats","close","buildProductionBundle","hasWarnings","rawMessages","toJson","all","warnings","reportWebpackWarnings","assets","cachedAssets","hash","err","panic","structureWebpackErrors","Stage","BuildJavascript","end","shouldGenerateEngines","state","getState","push","createGraphqlEngineBundle","createPageSSRBundle","rootDir","components","staticQueriesByTemplate","reporter","isVerbose","Promise","buildSSRBundleActivityProgress","buildRenderer","BuildHTML","GATSBY_SLICES","renderPageHash","templateHashes","getSSRChunkHashes","GATSBY_PARTIAL_HYDRATION","buildPartialHydrationBundleActivityProgress","buildPartialHydrationRenderer","pageConfigActivity","preparePageTemplateConfigs","validateEnginesWithActivity","cacheActivity","graphqlRunner","GraphQLRunner","collectStats","graphqlTracing","queryIds","calculateDirtyQueries","pageQueryIds","filter","query","getPageMode","waitMaterializePageMode","materializePageMode","waitForWorkerPoolRestart","resolve","cpuCoreCount","runStaticQueries","runPageQueries","runQueriesInWorkersQueue","waitUntilAllJobsComplete","waitUntilWorkerJobsAreComplete","restart","mergeWorkerState","runSliceQueries","engineTemplatePaths","Set","SSGCount","DSGCount","SSRCount","page","pages","values","mode","add","componentPath","addSiteMeasurement","totalPagesCount","size","copyStaticQueriesToEngine","send","type","action","timestamp","toJSON","appDataUtil","exists","dispatch","payload","rewriteActivityTimer","write","templatePath","templateHash","component","get","isSlice","console","error","availableTemplates","keys","Error","html","ssrCompilationHash","flushPendingPageDataWrites","markWebpackStatusAsDone","sliceDataPath","fs","existsSync","destination","copySync","copyStaticDirs","isTrackingEnabled","bundleSizes","asset","endsWith","map","pageDataSizes","pageDataStats","bundleStats","aggregateStats","queryStats","getStats","actions","setProgramStatus","db","saveState","keepPageRenderer","toRegenerate","toDelete","buildHTMLPagesAndDeleteStaleArtifacts","waitWorkerPoolEnd","schema","definitions","config","graphqlTypegenOptions","graphqlTypegen","generateOnBuild","typegenActivity","writeTypeScriptTypes","panicOnBuild","id","context","sourceMessage","postBuildActivityTimer","e","message","_renderPageTree","functions","gatsbyCloudConfig","constructConfigObject","info","uptime","stopTracer","logPages","length","writeToFile","createdFilesPath","createdFilesContent","deletedFilesPath","deletedFilesContent","writeFile","storeCache","adapt","showExperimentNotices","userGetsSevenDayFeedback","showSevenDayFeedbackRequest","userPassesFeedbackRequestHeuristic","showFeedbackRequest"],"sources":["../../src/commands/build.ts"],"sourcesContent":["import path from \"path\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport signalExit from \"signal-exit\"\nimport fs from \"fs-extra\"\nimport telemetry from \"gatsby-telemetry\"\nimport {\n  updateInternalSiteMetadata,\n  isTruthy,\n  uuid,\n  cpuCoreCount,\n} from \"gatsby-core-utils\"\nimport {\n  buildRenderer,\n  buildHTMLPagesAndDeleteStaleArtifacts,\n  IBuildArgs,\n} from \"./build-html\"\nimport { buildProductionBundle } from \"./build-javascript\"\nimport { bootstrap } from \"../bootstrap\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { GraphQLRunner } from \"../query/graphql-runner\"\nimport { copyStaticDirs } from \"../utils/get-static-dir\"\nimport { initTracer, stopTracer } from \"../utils/tracer\"\nimport * as db from \"../redux/save-state\"\nimport { store } from \"../redux\"\nimport * as appDataUtil from \"../utils/app-data\"\nimport { flush as flushPendingPageDataWrites } from \"../utils/page-data\"\nimport {\n  structureWebpackErrors,\n  reportWebpackWarnings,\n} from \"../utils/webpack-error-utils\"\nimport {\n  userGetsSevenDayFeedback,\n  userPassesFeedbackRequestHeuristic,\n  showFeedbackRequest,\n  showSevenDayFeedbackRequest,\n} from \"../utils/feedback\"\nimport { actions } from \"../redux/actions\"\nimport { waitUntilAllJobsComplete } from \"../utils/wait-until-jobs-complete\"\nimport { Stage } from \"./types\"\nimport {\n  calculateDirtyQueries,\n  runStaticQueries,\n  runPageQueries,\n  runSliceQueries,\n  writeOutRequires,\n} from \"../services\"\nimport {\n  markWebpackStatusAsPending,\n  markWebpackStatusAsDone,\n} from \"../utils/webpack-status\"\nimport { showExperimentNotices } from \"../utils/show-experiment-notice\"\nimport {\n  mergeWorkerState,\n  runQueriesInWorkersQueue,\n} from \"../utils/worker/pool\"\nimport { createGraphqlEngineBundle } from \"../schema/graphql-engine/bundle-webpack\"\nimport {\n  createPageSSRBundle,\n  copyStaticQueriesToEngine,\n} from \"../utils/page-ssr-module/bundle-webpack\"\nimport { shouldGenerateEngines } from \"../utils/engines-helpers\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport type webpack from \"webpack\"\nimport {\n  materializePageMode,\n  getPageMode,\n  preparePageTemplateConfigs,\n} from \"../utils/page-mode\"\nimport { validateEnginesWithActivity } from \"../utils/validate-engines\"\nimport { constructConfigObject } from \"../utils/gatsby-cloud-config\"\nimport { waitUntilWorkerJobsAreComplete } from \"../utils/jobs/worker-messaging\"\nimport { getSSRChunkHashes } from \"../utils/webpack/get-ssr-chunk-hashes\"\nimport { writeTypeScriptTypes } from \"../utils/graphql-typegen/ts-codegen\"\n\nmodule.exports = async function build(\n  program: IBuildArgs,\n  // Let external systems running Gatsby to inject attributes\n  externalTelemetryAttributes: Record<string, any>\n): Promise<void> {\n  // global gatsby object to use without store\n  global.__GATSBY = {\n    buildId: uuid.v4(),\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    root: program!.directory,\n  }\n\n  if (isTruthy(process.env.VERBOSE)) {\n    program.verbose = true\n  }\n  report.setVerbose(program.verbose)\n\n  if (program.profile) {\n    report.warn(\n      `React Profiling is enabled. This can have a performance impact. See https://www.gatsbyjs.com/docs/profiling-site-performance-with-react-profiler/#performance-impact`\n    )\n  }\n\n  report.verbose(`Running build in \"${process.env.NODE_ENV}\" environment`)\n\n  await updateInternalSiteMetadata({\n    name: program.sitePackageJson.name,\n    sitePath: program.directory,\n    lastRun: Date.now(),\n    pid: process.pid,\n  })\n\n  markWebpackStatusAsPending()\n\n  const publicDir = path.join(program.directory, `public`)\n  if (!externalTelemetryAttributes) {\n    await initTracer(\n      process.env.GATSBY_OPEN_TRACING_CONFIG_FILE ||\n        program.openTracingConfigFile\n    )\n  }\n\n  const buildActivity = report.phantomActivity(`build`)\n  buildActivity.start()\n\n  telemetry.trackCli(`BUILD_START`)\n  signalExit(exitCode => {\n    telemetry.trackCli(`BUILD_END`, {\n      exitCode: exitCode as number | undefined,\n    })\n  })\n\n  const buildSpan = buildActivity.span\n  buildSpan.setTag(`directory`, program.directory)\n\n  // Add external tags to buildSpan\n  if (externalTelemetryAttributes) {\n    Object.entries(externalTelemetryAttributes).forEach(([key, value]) => {\n      buildActivity.span.setTag(key, value)\n    })\n  }\n\n  const { gatsbyNodeGraphQLFunction, workerPool, adapterManager } =\n    await bootstrap({\n      program,\n      parentSpan: buildSpan,\n    })\n\n  await apiRunnerNode(`onPreBuild`, {\n    graphql: gatsbyNodeGraphQLFunction,\n    parentSpan: buildSpan,\n  })\n\n  // writes sync and async require files to disk\n  // used inside routing \"html\" + \"javascript\"\n  await writeOutRequires({\n    store,\n    parentSpan: buildSpan,\n  })\n\n  let closeJavascriptBundleCompilation: (() => Promise<void>) | undefined\n  let closeHTMLBundleCompilation: (() => Promise<void>) | undefined\n  let closePartialHydrationBundleCompilation: (() => Promise<void>) | undefined\n  let webpackAssets: Array<webpack.StatsAsset> | null = null\n  let webpackCompilationHash: string | null = null\n  let webpackSSRCompilationHash: string | null = null\n  let templateCompilationHashes: Record<string, string> = {}\n\n  const engineBundlingPromises: Array<Promise<any>> = []\n  const buildActivityTimer = report.activityTimer(\n    `Building production JavaScript and CSS bundles`,\n    { parentSpan: buildSpan }\n  )\n  buildActivityTimer.start()\n\n  try {\n    const { stats, close } = await buildProductionBundle(\n      program,\n      buildActivityTimer.span\n    )\n    closeJavascriptBundleCompilation = close\n\n    if (stats.hasWarnings()) {\n      const rawMessages = stats.toJson({ all: false, warnings: true })\n      reportWebpackWarnings(rawMessages.warnings, report)\n    }\n\n    webpackAssets = stats.toJson({\n      all: false,\n      assets: true,\n      cachedAssets: true,\n    }).assets as Array<webpack.StatsAsset>\n    webpackCompilationHash = stats.hash as string\n  } catch (err) {\n    buildActivityTimer.panic(structureWebpackErrors(Stage.BuildJavascript, err))\n  } finally {\n    buildActivityTimer.end()\n  }\n\n  if (shouldGenerateEngines()) {\n    const state = store.getState()\n    const buildActivityTimer = report.activityTimer(\n      `Building Rendering Engines`,\n      { parentSpan: buildSpan }\n    )\n    try {\n      buildActivityTimer.start()\n      // bundle graphql-engine\n      engineBundlingPromises.push(\n        createGraphqlEngineBundle(program.directory, report, program.verbose)\n      )\n\n      engineBundlingPromises.push(\n        createPageSSRBundle({\n          rootDir: program.directory,\n          components: state.components,\n          staticQueriesByTemplate: state.staticQueriesByTemplate,\n          webpackCompilationHash: webpackCompilationHash as string, // we set webpackCompilationHash above\n          reporter: report,\n          isVerbose: program.verbose,\n        })\n      )\n      await Promise.all(engineBundlingPromises)\n    } catch (err) {\n      reporter.panic(err)\n    } finally {\n      buildActivityTimer.end()\n    }\n  }\n\n  const buildSSRBundleActivityProgress = report.activityTimer(\n    `Building HTML renderer`,\n    { parentSpan: buildSpan }\n  )\n  buildSSRBundleActivityProgress.start()\n  try {\n    const { close, stats } = await buildRenderer(\n      program,\n      Stage.BuildHTML,\n      buildSSRBundleActivityProgress.span\n    )\n\n    closeHTMLBundleCompilation = close\n    if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n      const { renderPageHash, templateHashes } = getSSRChunkHashes({\n        stats,\n        components: store.getState().components,\n      })\n      webpackSSRCompilationHash = renderPageHash\n      templateCompilationHashes = templateHashes\n    } else {\n      webpackSSRCompilationHash = stats.hash as string\n    }\n\n    await close()\n  } catch (err) {\n    buildActivityTimer.panic(structureWebpackErrors(Stage.BuildHTML, err))\n  } finally {\n    buildSSRBundleActivityProgress.end()\n  }\n\n  if (\n    (process.env.GATSBY_PARTIAL_HYDRATION === `true` ||\n      process.env.GATSBY_PARTIAL_HYDRATION === `1`) &&\n    _CFLAGS_.GATSBY_MAJOR === `5`\n  ) {\n    const buildPartialHydrationBundleActivityProgress = report.activityTimer(\n      `Building Partial Hydration renderer`,\n      { parentSpan: buildSpan }\n    )\n    buildPartialHydrationBundleActivityProgress.start()\n    try {\n      const { buildPartialHydrationRenderer } = await import(`./build-html`)\n      const { close } = await buildPartialHydrationRenderer(\n        program,\n        Stage.BuildHTML,\n        buildPartialHydrationBundleActivityProgress.span\n      )\n\n      closePartialHydrationBundleCompilation = close\n\n      await close()\n    } catch (err) {\n      buildActivityTimer.panic(structureWebpackErrors(Stage.BuildHTML, err))\n    } finally {\n      buildPartialHydrationBundleActivityProgress.end()\n    }\n  }\n\n  // exec outer config function for each template\n  const pageConfigActivity = report.activityTimer(`Execute page configs`, {\n    parentSpan: buildSpan,\n  })\n  pageConfigActivity.start()\n  try {\n    await preparePageTemplateConfigs(gatsbyNodeGraphQLFunction)\n  } catch (err) {\n    reporter.panic(err)\n  } finally {\n    pageConfigActivity.end()\n  }\n\n  if (shouldGenerateEngines()) {\n    await validateEnginesWithActivity(program.directory, buildSpan)\n  }\n\n  const cacheActivity = report.activityTimer(`Caching Webpack compilations`, {\n    parentSpan: buildSpan,\n  })\n  try {\n    cacheActivity.start()\n    await Promise.all([\n      closeJavascriptBundleCompilation?.(),\n      closeHTMLBundleCompilation?.(),\n      closePartialHydrationBundleCompilation?.(),\n    ])\n  } finally {\n    cacheActivity.end()\n  }\n\n  const graphqlRunner = new GraphQLRunner(store, {\n    collectStats: true,\n    graphqlTracing: program.graphqlTracing,\n  })\n\n  const { queryIds } = await calculateDirtyQueries({ store })\n\n  // Only run queries with mode SSG\n\n  queryIds.pageQueryIds = queryIds.pageQueryIds.filter(\n    query => getPageMode(query) === `SSG`\n  )\n\n  // Start saving page.mode in the main process (while queries run in workers in parallel)\n  const waitMaterializePageMode = materializePageMode()\n\n  let waitForWorkerPoolRestart = Promise.resolve()\n  // If one wants to debug query running you can set the CPU count to 1\n  if (cpuCoreCount() === 1) {\n    await runStaticQueries({\n      queryIds,\n      parentSpan: buildSpan,\n      store,\n      graphqlRunner,\n    })\n\n    await runPageQueries({\n      queryIds,\n      graphqlRunner,\n      parentSpan: buildSpan,\n      store,\n    })\n  } else {\n    await runQueriesInWorkersQueue(workerPool, queryIds, {\n      parentSpan: buildSpan,\n    })\n    // Jobs still might be running even though query running finished\n    await Promise.all([\n      waitUntilAllJobsComplete(),\n      waitUntilWorkerJobsAreComplete(),\n    ])\n    // Restart worker pool before merging state to lower memory pressure while merging state\n    waitForWorkerPoolRestart = workerPool.restart()\n    await mergeWorkerState(workerPool, buildSpan)\n  }\n\n  if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n    await runSliceQueries({\n      queryIds,\n      graphqlRunner,\n      parentSpan: buildSpan,\n      store,\n    })\n  }\n\n  const engineTemplatePaths = new Set<string>()\n  {\n    let SSGCount = 0\n    let DSGCount = 0\n    let SSRCount = 0\n\n    for (const page of store.getState().pages.values()) {\n      if (page.mode === `SSR`) {\n        SSRCount++\n        engineTemplatePaths.add(page.componentPath)\n      } else if (page.mode === `DSG`) {\n        DSGCount++\n        engineTemplatePaths.add(page.componentPath)\n      } else {\n        SSGCount++\n      }\n    }\n\n    telemetry.addSiteMeasurement(`BUILD_END`, {\n      totalPagesCount: store.getState().pages.size, // total number of pages\n      SSRCount,\n      DSGCount,\n      SSGCount,\n    })\n  }\n\n  await copyStaticQueriesToEngine({\n    engineTemplatePaths,\n    staticQueriesByTemplate: store.getState().staticQueriesByTemplate,\n    components: store.getState().components,\n  })\n\n  if (!(_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES)) {\n    if (process.send && shouldGenerateEngines()) {\n      await waitMaterializePageMode\n      process.send({\n        type: `LOG_ACTION`,\n        action: {\n          type: `ENGINES_READY`,\n          timestamp: new Date().toJSON(),\n        },\n      })\n    }\n  }\n\n  // create scope so we don't leak state object\n  {\n    const state = store.getState()\n    if (\n      webpackCompilationHash !== state.webpackCompilationHash ||\n      !appDataUtil.exists(publicDir)\n    ) {\n      store.dispatch({\n        type: `SET_WEBPACK_COMPILATION_HASH`,\n        payload: webpackCompilationHash,\n      })\n\n      const rewriteActivityTimer = report.activityTimer(\n        `Rewriting compilation hashes`,\n        {\n          parentSpan: buildSpan,\n        }\n      )\n      rewriteActivityTimer.start()\n\n      await appDataUtil.write(publicDir, webpackCompilationHash as string)\n\n      rewriteActivityTimer.end()\n    }\n\n    if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n      Object.entries(templateCompilationHashes).forEach(\n        ([templatePath, templateHash]) => {\n          const component = store.getState().components.get(templatePath)\n          if (component) {\n            const action = {\n              type: `SET_SSR_TEMPLATE_WEBPACK_COMPILATION_HASH`,\n              payload: {\n                templatePath,\n                templateHash,\n                pages: component.pages,\n                isSlice: component.isSlice,\n              },\n            }\n            store.dispatch(action)\n          } else {\n            console.error({\n              templatePath,\n              templateHash,\n              availableTemplates: [...store.getState().components.keys()],\n            })\n            throw new Error(\n              `something changed in webpack but I don't know what`\n            )\n          }\n        }\n      )\n    }\n\n    if (state.html.ssrCompilationHash !== webpackSSRCompilationHash) {\n      store.dispatch({\n        type: `SET_SSR_WEBPACK_COMPILATION_HASH`,\n        payload: webpackSSRCompilationHash,\n      })\n    }\n  }\n\n  await flushPendingPageDataWrites(buildSpan)\n  markWebpackStatusAsDone()\n\n  if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n    if (shouldGenerateEngines()) {\n      const state = store.getState()\n      const sliceDataPath = path.join(\n        state.program.directory,\n        `public`,\n        `slice-data`\n      )\n      if (fs.existsSync(sliceDataPath)) {\n        const destination = path.join(\n          state.program.directory,\n          `.cache`,\n          `page-ssr`,\n          `slice-data`\n        )\n        fs.copySync(sliceDataPath, destination)\n      }\n\n      if (process.send) {\n        await waitMaterializePageMode\n        process.send({\n          type: `LOG_ACTION`,\n          action: {\n            type: `ENGINES_READY`,\n            timestamp: new Date().toJSON(),\n          },\n        })\n      }\n    }\n  }\n\n  // Copy files from the static directory to\n  // an equivalent static directory within public.\n  copyStaticDirs()\n\n  if (telemetry.isTrackingEnabled()) {\n    // transform asset size to kB (from bytes) to fit 64 bit to numbers\n    const bundleSizes = (webpackAssets as Array<webpack.StatsAsset>)\n      .filter(asset => asset.name.endsWith(`.js`))\n      .map(asset => asset.size / 1000)\n    const pageDataSizes = [...store.getState().pageDataStats.values()]\n\n    telemetry.addSiteMeasurement(`BUILD_END`, {\n      bundleStats: telemetry.aggregateStats(bundleSizes),\n      pageDataStats: telemetry.aggregateStats(pageDataSizes),\n      queryStats: graphqlRunner.getStats(),\n    })\n  }\n\n  store.dispatch(actions.setProgramStatus(`BOOTSTRAP_QUERY_RUNNING_FINISHED`))\n\n  await db.saveState()\n\n  await waitUntilAllJobsComplete()\n\n  // we need to save it again to make sure our latest state has been saved\n  await db.saveState()\n\n  if (shouldGenerateEngines()) {\n    // well, tbf we should just generate this in `.cache` and avoid deleting it :shrug:\n    program.keepPageRenderer = true\n  }\n\n  await waitForWorkerPoolRestart\n\n  const { toRegenerate, toDelete } =\n    await buildHTMLPagesAndDeleteStaleArtifacts({\n      program,\n      workerPool,\n      parentSpan: buildSpan,\n    })\n\n  await waitMaterializePageMode\n  const waitWorkerPoolEnd = Promise.all(workerPool.end())\n\n  // create scope so we don't leak state object\n  {\n    const { schema, definitions, config } = store.getState()\n    const directory = program.directory\n    const graphqlTypegenOptions = config.graphqlTypegen\n\n    // Only generate types when the option is enabled\n    if (graphqlTypegenOptions && graphqlTypegenOptions.generateOnBuild) {\n      const typegenActivity = reporter.activityTimer(\n        `Generating TypeScript types`,\n        {\n          parentSpan: buildSpan,\n        }\n      )\n      typegenActivity.start()\n\n      try {\n        await writeTypeScriptTypes(\n          directory,\n          schema,\n          definitions,\n          graphqlTypegenOptions\n        )\n      } catch (err) {\n        typegenActivity.panicOnBuild({\n          id: `12100`,\n          context: {\n            sourceMessage: err,\n          },\n        })\n      }\n\n      typegenActivity.end()\n    }\n  }\n\n  telemetry.addSiteMeasurement(`BUILD_END`, {\n    totalPagesCount: store.getState().pages.size, // total number of pages\n  })\n  const postBuildActivityTimer = report.activityTimer(`onPostBuild`, {\n    parentSpan: buildSpan,\n  })\n  postBuildActivityTimer.start()\n  await apiRunnerNode(`onPostBuild`, {\n    graphql: gatsbyNodeGraphQLFunction,\n    parentSpan: postBuildActivityTimer.span,\n  })\n  postBuildActivityTimer.end()\n\n  // Wait for any jobs that were started in onPostBuild\n  // This could occur due to queries being run which invoke sharp for instance\n  await waitUntilAllJobsComplete()\n\n  try {\n    await waitWorkerPoolEnd\n  } catch (e) {\n    report.warn(`Error when closing WorkerPool: ${e.message}`)\n  }\n\n  // Make sure we saved the latest state so we have all jobs cached\n  await db.saveState()\n\n  const state = store.getState()\n  reporter._renderPageTree({\n    components: state.components,\n    functions: state.functions,\n    pages: state.pages,\n    root: state.program.directory,\n  })\n\n  if (process.send) {\n    const gatsbyCloudConfig = constructConfigObject(state.config)\n\n    process.send({\n      type: `LOG_ACTION`,\n      action: {\n        type: `GATSBY_CONFIG_KEYS`,\n        payload: gatsbyCloudConfig,\n        timestamp: new Date().toJSON(),\n      },\n    })\n  }\n\n  report.info(`Done building in ${process.uptime()} sec`)\n\n  buildActivity.end()\n  if (!externalTelemetryAttributes) {\n    await stopTracer()\n  }\n\n  if (program.logPages) {\n    if (toRegenerate.length) {\n      report.info(\n        `Built pages:\\n${toRegenerate\n          .map(path => `Updated page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n\n    if (toDelete.length) {\n      report.info(\n        `Deleted pages:\\n${toDelete\n          .map(path => `Deleted page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n  }\n\n  if (program.writeToFile) {\n    const createdFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `newPages.txt`\n    )\n    const createdFilesContent = toRegenerate.length\n      ? `${toRegenerate.join(`\\n`)}\\n`\n      : ``\n\n    const deletedFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `deletedPages.txt`\n    )\n    const deletedFilesContent = toDelete.length\n      ? `${toDelete.join(`\\n`)}\\n`\n      : ``\n\n    await fs.writeFile(createdFilesPath, createdFilesContent, `utf8`)\n    report.info(`.cache/newPages.txt created`)\n\n    await fs.writeFile(deletedFilesPath, deletedFilesContent, `utf8`)\n    report.info(`.cache/deletedPages.txt created`)\n  }\n\n  if (adapterManager) {\n    await adapterManager.storeCache()\n    await adapterManager.adapt()\n  }\n\n  showExperimentNotices()\n\n  if (await userGetsSevenDayFeedback()) {\n    showSevenDayFeedbackRequest()\n  } else if (await userPassesFeedbackRequestHeuristic()) {\n    showFeedbackRequest()\n  }\n}\n"],"mappings":"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"}