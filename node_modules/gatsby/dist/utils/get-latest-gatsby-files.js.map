{"version":3,"file":"get-latest-gatsby-files.js","names":["ROOT","path","join","__dirname","UNPKG_ROOT","GITHUB_ROOT","FILE_NAMES","APIS","ADAPTERS","OUTPUT_FILES","_fetchFile","root","fileName","data","axios","get","timeout","e","_getFile","outputFileName","defaultReturn","tryGithubBeforeUnpkg","forcedContent","fileToUse","dataToUse","fs","writeFile","JSON","stringify","pathExists","endsWith","readJSON","catch","importedFile","adapters","preferDefault","getLatestAPIs","browser","node","ssr","getLatestAdapters","process","env","GATSBY_ADAPTERS_MANIFEST"],"sources":["../../src/utils/get-latest-gatsby-files.ts"],"sourcesContent":["import path from \"path\"\nimport * as fs from \"fs-extra\"\nimport axios from \"axios\"\nimport { IAdapterManifestEntry } from \"./adapter/types\"\nimport { preferDefault } from \"../bootstrap/prefer-default\"\n\nconst ROOT = path.join(__dirname, `..`, `..`)\nconst UNPKG_ROOT = `https://unpkg.com/gatsby/`\nconst GITHUB_ROOT = `https://raw.githubusercontent.com/gatsbyjs/gatsby/master/packages/gatsby/`\n\nconst FILE_NAMES = {\n  APIS: `apis.json`,\n  ADAPTERS: `adapters.js`,\n}\n\nconst OUTPUT_FILES = {\n  APIS: path.join(ROOT, `latest-apis.json`),\n  ADAPTERS: path.join(ROOT, `latest-adapters.js`),\n}\n\nexport interface IAPIResponse {\n  browser: Record<string, any>\n  node: Record<string, any>\n  ssr: Record<string, any>\n}\n\nconst _fetchFile = async (root: string, fileName: string): Promise<any> => {\n  try {\n    const { data } = await axios.get(`${root}${fileName}`, {\n      timeout: 5000,\n    })\n    return data\n  } catch (e) {\n    return null\n  }\n}\n\nconst _getFile = async <T>({\n  fileName,\n  outputFileName,\n  defaultReturn,\n  tryGithubBeforeUnpkg,\n  forcedContent,\n}: {\n  fileName: string\n  outputFileName: string\n  defaultReturn: T\n  tryGithubBeforeUnpkg?: boolean\n  forcedContent?: string\n}): Promise<T> => {\n  let fileToUse = path.join(ROOT, fileName)\n\n  let dataToUse = forcedContent\n\n  if (!dataToUse && tryGithubBeforeUnpkg) {\n    dataToUse = await _fetchFile(GITHUB_ROOT, fileName)\n  }\n  if (!dataToUse) {\n    dataToUse = await _fetchFile(UNPKG_ROOT, fileName)\n  }\n\n  if (dataToUse) {\n    await fs.writeFile(\n      outputFileName,\n      typeof dataToUse === `string`\n        ? dataToUse\n        : JSON.stringify(dataToUse, null, 2),\n      `utf8`\n    )\n\n    fileToUse = outputFileName\n  } else {\n    // if file was previously cached, use it\n    if (await fs.pathExists(outputFileName)) {\n      fileToUse = outputFileName\n    }\n  }\n\n  if (fileToUse.endsWith(`.json`)) {\n    return fs.readJSON(fileToUse).catch(() => defaultReturn)\n  } else {\n    try {\n      const importedFile = await import(fileToUse)\n      const adapters = preferDefault(importedFile)\n      return adapters\n    } catch (e) {\n      // no-op\n      return defaultReturn\n    }\n  }\n}\n\nexport const getLatestAPIs = async (): Promise<IAPIResponse> =>\n  _getFile({\n    fileName: FILE_NAMES.APIS,\n    outputFileName: OUTPUT_FILES.APIS,\n    defaultReturn: {\n      browser: {},\n      node: {},\n      ssr: {},\n    },\n  })\n\nexport const getLatestAdapters = async (): Promise<\n  Array<IAdapterManifestEntry>\n> =>\n  _getFile({\n    fileName: FILE_NAMES.ADAPTERS,\n    outputFileName: OUTPUT_FILES.ADAPTERS,\n    defaultReturn: [],\n    // trying github first for adapters manifest to be able to faster make changes to version manifest\n    // as publishing latest version of gatsby package takes more time\n    tryGithubBeforeUnpkg: true,\n    // in e2e-tests/adapters we force adapters manifest to be used\n    forcedContent: process.env.GATSBY_ADAPTERS_MANIFEST,\n  })\n"],"mappings":"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"}