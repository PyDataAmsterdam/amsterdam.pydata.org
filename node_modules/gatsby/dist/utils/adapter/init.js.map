{"version":3,"file":"init.js","names":["getAdaptersCacheDir","join","process","cwd","createAdaptersCacheDir","ensureDir","emptyDir","packageJsonPath","outputJson","name","description","version","private","author","license","tryLoadingAlreadyInstalledAdapter","adapterToUse","installLocation","currentGatsbyVersion","locationRequire","createRequireFromPath","adapterPackageJson","module","adapterPackageVersion","satisfies","moduleVersion","includePrerelease","found","compatible","installedVersion","incompatibilityReason","required","maybeAddFileProtocol","resolve","loadedModule","preferDefault","e","handleAdapterProblem","message","panicFn","reporter","panic","env","GATSBY_CONTINUE_BUILD_ON_ADAPTER_MISMATCH","warn","undefined","getAdapterInit","gatsbyVersionFromPackageJson","latestAdapters","getLatestAdapters","adapterEntry","find","candidate","test","verbose","versionEntry","versions","gatsbyVersion","adapterInstalledByUserResults","adapterPreviouslyInstalledInCacheAdaptersResults","installTimer","activityTimer","start","options","stderr","npmAdditionalCliArgs","execa","end","adapterAutoInstalledInCacheAdaptersResults","info"],"sources":["../../../src/utils/adapter/init.ts"],"sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\nimport _ from \"lodash\"\nimport { createRequireFromPath } from \"gatsby-core-utils/create-require-from-path\"\nimport { join } from \"path\"\nimport { emptyDir, ensureDir, outputJson } from \"fs-extra\"\nimport execa, { Options as ExecaOptions } from \"execa\"\nimport { version as gatsbyVersionFromPackageJson } from \"gatsby/package.json\"\nimport { satisfies } from \"semver\"\nimport type { AdapterInit } from \"./types\"\nimport { preferDefault } from \"../../bootstrap/prefer-default\"\nimport { getLatestAdapters } from \"../get-latest-gatsby-files\"\nimport { maybeAddFileProtocol } from \"../../bootstrap/resolve-js-file-path\"\n\nexport const getAdaptersCacheDir = (): string =>\n  join(process.cwd(), `.cache/adapters`)\n\nconst createAdaptersCacheDir = async (): Promise<void> => {\n  await ensureDir(getAdaptersCacheDir())\n  await emptyDir(getAdaptersCacheDir())\n\n  const packageJsonPath = join(getAdaptersCacheDir(), `package.json`)\n\n  await outputJson(packageJsonPath, {\n    name: `gatsby-adapters`,\n    description: `This directory contains adapters that have been automatically installed by Gatsby.`,\n    version: `1.0.0`,\n    private: true,\n    author: `Gatsby`,\n    license: `MIT`,\n  })\n}\n\ninterface IAdapterToUse {\n  name: string\n  module: string\n  gatsbyVersion: string\n  moduleVersion: string\n}\n\nconst tryLoadingAlreadyInstalledAdapter = async ({\n  adapterToUse,\n  installLocation,\n  currentGatsbyVersion,\n}: {\n  adapterToUse: IAdapterToUse\n  currentGatsbyVersion: string\n  installLocation: string\n}): Promise<\n  | {\n      found: false\n    }\n  | ({\n      found: true\n      installedVersion: string\n    } & (\n      | {\n          compatible: false\n          incompatibilityReason: string\n        }\n      | {\n          compatible: true\n          loadedModule: AdapterInit\n        }\n    ))\n> => {\n  try {\n    const locationRequire = createRequireFromPath(\n      `${installLocation}/:internal:`\n    )\n    const adapterPackageJson = locationRequire(\n      `${adapterToUse.module}/package.json`\n    )\n    const adapterPackageVersion = adapterPackageJson?.version\n\n    // Check if installed adapter version is compatible with the current Gatsby version based on the manifest\n    if (\n      !satisfies(adapterPackageVersion, adapterToUse.moduleVersion, {\n        includePrerelease: true,\n      })\n    ) {\n      return {\n        found: true,\n        compatible: false,\n        installedVersion: adapterPackageVersion,\n        incompatibilityReason: `Used gatsby version \"${currentGatsbyVersion}\" requires \"${adapterToUse.module}@${adapterToUse.moduleVersion}\". Installed \"${adapterToUse.module}\" version: \"${adapterPackageVersion}\".`,\n      }\n    }\n\n    const required = maybeAddFileProtocol(\n      locationRequire.resolve(adapterToUse.module)\n    )\n    if (required) {\n      return {\n        found: true,\n        compatible: true,\n        installedVersion: adapterPackageVersion,\n        loadedModule: preferDefault(\n          preferDefault(await import(required))\n        ) as AdapterInit,\n      }\n    } else {\n      return {\n        found: false,\n      }\n    }\n  } catch (e) {\n    return {\n      found: false,\n    }\n  }\n}\n\nconst handleAdapterProblem = (\n  message: string,\n  panicFn = reporter.panic\n): never | undefined => {\n  if (!process.env.GATSBY_CONTINUE_BUILD_ON_ADAPTER_MISMATCH) {\n    panicFn(\n      `${message}\\n\\nZero-configuration deployment failed to avoid potentially broken deployment.\\nIf you want build to continue despite above problems:\\n - configure adapter manually in gatsby-config which will skip zero-configuration deployment attempt\\n - or set GATSBY_CONTINUE_BUILD_ON_MISSING_ADAPTER=true environment variable to continue build without an adapter.`\n    )\n  } else {\n    reporter.warn(\n      `${message}\\n\\nContinuing build using without using any adapter due to GATSBY_CONTINUE_BUILD_ON_MISSING_ADAPTER environment variable being set`\n    )\n  }\n  return undefined\n}\n\nexport async function getAdapterInit(\n  currentGatsbyVersion: string = gatsbyVersionFromPackageJson\n): Promise<AdapterInit | undefined> {\n  // 0. Try to fetch the latest adapters manifest - if it fails, we continue with manifest packaged with current version of gatsby\n  const latestAdapters = await getLatestAdapters()\n\n  // 1. Find adapter candidates that are compatible with the current environment\n  //    we find all matching adapters in case package is renamed in the future and future gatsby versions will need different package than previous ones\n  const adapterEntry = latestAdapters.find(candidate => candidate.test())\n\n  if (!adapterEntry) {\n    reporter.verbose(\n      `No adapter was found for the current environment. Skipping adapter initialization.`\n    )\n    return undefined\n  }\n\n  // 2.From the manifest entry find one that supports current Gatsby version and identify it's version to use\n  //   First matching one will be used.\n  let adapterToUse: IAdapterToUse | undefined = undefined\n\n  for (const versionEntry of adapterEntry.versions) {\n    if (\n      satisfies(currentGatsbyVersion, versionEntry.gatsbyVersion, {\n        includePrerelease: true,\n      })\n    ) {\n      adapterToUse = {\n        name: adapterEntry.name,\n        module: versionEntry.module ?? adapterEntry.module,\n        gatsbyVersion: versionEntry.gatsbyVersion,\n        moduleVersion: versionEntry.moduleVersion,\n      }\n      break\n    }\n  }\n\n  if (!adapterToUse) {\n    return handleAdapterProblem(\n      `No version of ${adapterEntry.name} adapter is compatible with your current Gatsby version ${currentGatsbyVersion}.`\n    )\n  }\n\n  {\n    // 3. Check if the user has manually installed the adapter and try to resolve it from there\n    const adapterInstalledByUserResults =\n      await tryLoadingAlreadyInstalledAdapter({\n        adapterToUse,\n        installLocation: process.cwd(),\n        currentGatsbyVersion,\n      })\n    if (adapterInstalledByUserResults.found) {\n      if (adapterInstalledByUserResults.compatible) {\n        reporter.verbose(\n          `Using site's adapter dependency \"${adapterToUse.module}@${adapterInstalledByUserResults.installedVersion}\"`\n        )\n        return adapterInstalledByUserResults.loadedModule\n      } else {\n        reporter.warn(\n          `Ignoring incompatible ${adapterToUse.module}@${adapterInstalledByUserResults.installedVersion} installed by site. ${adapterInstalledByUserResults.incompatibilityReason}`\n        )\n      }\n    }\n  }\n\n  {\n    // 4. Check if a previous run has installed the correct adapter into .cache/adapters already and try to resolve it from there\n    const adapterPreviouslyInstalledInCacheAdaptersResults =\n      await tryLoadingAlreadyInstalledAdapter({\n        adapterToUse,\n        installLocation: getAdaptersCacheDir(),\n        currentGatsbyVersion,\n      })\n\n    if (adapterPreviouslyInstalledInCacheAdaptersResults.found) {\n      if (adapterPreviouslyInstalledInCacheAdaptersResults.compatible) {\n        reporter.verbose(\n          `Using previously adapter previously installed by gatsby \"${adapterToUse.module}@${adapterPreviouslyInstalledInCacheAdaptersResults.installedVersion}\"`\n        )\n        return adapterPreviouslyInstalledInCacheAdaptersResults.loadedModule\n      } else {\n        reporter.verbose(\n          `Ignoring incompatible ${adapterToUse.module} installed by gatsby in \".cache/adapters\" before. ${adapterPreviouslyInstalledInCacheAdaptersResults.incompatibilityReason}`\n        )\n      }\n    }\n  }\n\n  {\n    // 5. If user has not installed the adapter manually or is incompatible and we don't have cached version installed by gatsby or that version is not compatible\n    //    we try to install compatible version into .cache/adapters\n    const installTimer = reporter.activityTimer(\n      `Installing ${adapterToUse.name} adapter (${adapterToUse.module}@${adapterToUse.moduleVersion})`\n    )\n\n    try {\n      installTimer.start()\n      await createAdaptersCacheDir()\n\n      const options: ExecaOptions = {\n        stderr: `inherit`,\n        cwd: getAdaptersCacheDir(),\n      }\n\n      const npmAdditionalCliArgs = [\n        `--no-progress`,\n        `--no-audit`,\n        `--no-fund`,\n        `--loglevel`,\n        `error`,\n        `--color`,\n        `always`,\n        `--legacy-peer-deps`,\n        `--save-exact`,\n      ]\n\n      await execa(\n        `npm`,\n        [\n          `install`,\n          ...npmAdditionalCliArgs,\n          `${adapterToUse.module}@${adapterToUse.moduleVersion}`,\n        ],\n        options\n      )\n    } catch (e) {\n      return handleAdapterProblem(\n        `Could not install adapter \"${adapterToUse.module}@${adapterToUse.moduleVersion}\". Please install it yourself by adding it to your package.json's dependencies and try building your project again.`,\n        installTimer.panic\n      )\n    }\n\n    installTimer.end()\n  }\n\n  {\n    // 5. Try to load again from \".cache/adapters\"\n    const adapterAutoInstalledInCacheAdaptersResults =\n      await tryLoadingAlreadyInstalledAdapter({\n        adapterToUse,\n        installLocation: getAdaptersCacheDir(),\n        currentGatsbyVersion,\n      })\n\n    if (adapterAutoInstalledInCacheAdaptersResults.found) {\n      if (adapterAutoInstalledInCacheAdaptersResults.compatible) {\n        reporter.info(\n          `If you plan on staying on this deployment platform, consider installing \"${adapterToUse.module}@${adapterToUse.moduleVersion}\" as a dependency in your project. This will give you faster and more robust installs.`\n        )\n        return adapterAutoInstalledInCacheAdaptersResults.loadedModule\n      } else {\n        // this indicates a bug as we install version with range from manifest, and now after trying to load the adapter we consider that adapter incompatible\n        return handleAdapterProblem(\n          `Auto installed adapter \"${adapterToUse.module}@${adapterAutoInstalledInCacheAdaptersResults.installedVersion}\"`\n        )\n      }\n    } else {\n      // this indicates a bug with adapter itself (fail to resolve main entry point) OR the adapter loading logic\n      return handleAdapterProblem(\n        `Could not load adapter \"${adapterToUse.module}@${adapterToUse.moduleVersion}\". Adapter entry point is not resolvable.`\n      )\n    }\n  }\n}\n"],"mappings":"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"}