{"version":3,"file":"index.js","names":["validateEnginesWithActivity","directory","buildSpan","getCurrentPlatformAndTarget","getFunctionsTargetPlatformAndTarget","reporter","info","validateEnginesActivity","activityTimer","parentSpan","start","validateEngines","error","panic","id","context","end","worker","WorkerPool","require","resolve","numWorkers","env","GATSBY_OPEN_TRACING_CONFIG_FILE","silent","single","validate"],"sources":["../../../src/utils/validate-engines/index.ts"],"sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\nimport { WorkerPool } from \"gatsby-worker\"\nimport { isEqual } from \"lodash\"\nimport type { Span } from \"opentracing\"\nimport {\n  getCurrentPlatformAndTarget,\n  getFunctionsTargetPlatformAndTarget,\n} from \"../engines-helpers\"\n\nexport async function validateEnginesWithActivity(\n  directory: string,\n  buildSpan?: Span\n): Promise<void> {\n  if (\n    !isEqual(\n      getCurrentPlatformAndTarget(),\n      getFunctionsTargetPlatformAndTarget()\n    )\n  ) {\n    reporter.info(\n      `Skipping Rendering Engines validation as they are build for different platform and/or architecture`\n    )\n    return\n  }\n\n  const validateEnginesActivity = reporter.activityTimer(\n    `Validating Rendering Engines`,\n    {\n      parentSpan: buildSpan,\n    }\n  )\n  validateEnginesActivity.start()\n  try {\n    await validateEngines(directory)\n  } catch (error) {\n    validateEnginesActivity.panic({ id: `98001`, context: {}, error })\n  } finally {\n    validateEnginesActivity.end()\n  }\n}\n\nasync function validateEngines(directory: string): Promise<void> {\n  const worker = new WorkerPool<typeof import(\"./child\")>(\n    require.resolve(`./child`),\n    {\n      numWorkers: 1,\n      env: {\n        // Do not \"inherit\" this env var for validation,\n        // as otherwise validation will fail on any imports\n        // that OpenTracing config might make\n        GATSBY_OPEN_TRACING_CONFIG_FILE: ``,\n      },\n      silent: true,\n    }\n  )\n\n  try {\n    await worker.single.validate(directory)\n  } finally {\n    worker.end()\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AAGA;AAKO,eAAeA,2BAA2B,CAC/CC,SAAiB,EACjBC,SAAgB,EACD;EACf,IACE,CAAC,uBACC,IAAAC,2CAA2B,GAAE,EAC7B,IAAAC,mDAAmC,GAAE,CACtC,EACD;IACAC,iBAAQ,CAACC,IAAI,CACV,oGAAmG,CACrG;IACD;EACF;EAEA,MAAMC,uBAAuB,GAAGF,iBAAQ,CAACG,aAAa,CACnD,8BAA6B,EAC9B;IACEC,UAAU,EAAEP;EACd,CAAC,CACF;EACDK,uBAAuB,CAACG,KAAK,EAAE;EAC/B,IAAI;IACF,MAAMC,eAAe,CAACV,SAAS,CAAC;EAClC,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdL,uBAAuB,CAACM,KAAK,CAAC;MAAEC,EAAE,EAAG,OAAM;MAAEC,OAAO,EAAE,CAAC,CAAC;MAAEH;IAAM,CAAC,CAAC;EACpE,CAAC,SAAS;IACRL,uBAAuB,CAACS,GAAG,EAAE;EAC/B;AACF;AAEA,eAAeL,eAAe,CAACV,SAAiB,EAAiB;EAC/D,MAAMgB,MAAM,GAAG,IAAIC,wBAAU,CAC3BC,OAAO,CAACC,OAAO,CAAE,SAAQ,CAAC,EAC1B;IACEC,UAAU,EAAE,CAAC;IACbC,GAAG,EAAE;MACH;MACA;MACA;MACAC,+BAA+B,EAAG;IACpC,CAAC;IACDC,MAAM,EAAE;EACV,CAAC,CACF;EAED,IAAI;IACF,MAAMP,MAAM,CAACQ,MAAM,CAACC,QAAQ,CAACzB,SAAS,CAAC;EACzC,CAAC,SAAS;IACRgB,MAAM,CAACD,GAAG,EAAE;EACd;AACF"}