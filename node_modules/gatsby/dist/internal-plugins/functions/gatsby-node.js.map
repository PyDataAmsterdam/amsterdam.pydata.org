{"version":3,"file":"gatsby-node.js","names":["isProductionEnv","process","env","gatsby_executing_command","activeDevelopmentFunctions","Set","activeEntries","ensureFunctionIsCompiled","functionObj","compiledFunctionsDir","compiledFileExists","fs","stat","absoluteCompiledFilePath","e","time","Date","utimesSync","originalAbsoluteFilePath","Promise","resolve","watcher","chokidar","watch","on","_path","close","createGlobArray","siteDirectoryPath","plugins","globs","globIgnorePatterns","root","pluginName","nestedFolder","push","globPattern","ignorePattern","rootPath","path","join","forEach","plugin","name","includes","glob","globAsync","pattern","options","reject","err","files","createWebpackConfig","store","reporter","getState","flattenedPlugins","seenFunctionIds","allFunctions","all","map","knownFunctions","ignore","file","originalRelativeFilePath","relative","dir","parse","compiledFunctionName","compiledPath","finalName","urlResolve","functionIdBase","replace","functionId","has","counter","functionRoute","relativeCompiledFilePath","matchPath","getMatchPath","func","dispatch","internalActions","setFunctions","writeFileSync","JSON","stringify","config","pathPrefix","program","nodeEnv","NODE_ENV","configEnv","GATSBY_ACTIVE_ENV","envFile","parsed","dotenv","readFileSync","encoding","code","error","envObject","Object","keys","reduce","acc","key","varsFromProcessEnv","PUBLIC_DIR","mergedEnvVars","assign","processEnvVars","entries","precompileDevFunctions","GATSBY_PRECOMPILE_DEVELOP_FUNCTIONS","functionsList","parsedFile","compiledNameWithoutExtension","entryToTheFunction","stage","gatsbyPluginTSRequire","mod","createRequire","require","entry","output","filename","libraryTarget","target","optimization","minimize","extensions","cache","type","cacheLocation","mode","module","rules","test","resourceQuery","use","loader","byDependency","esm","fullySpecified","descriptionData","presets","exclude","webpack","DefinePlugin","PREFIX_TO_STRIP","prefixPaths","IgnorePlugin","checkResource","resource","warn","isFirstBuild","onPreBootstrap","parentSpan","activity","activityTimer","start","directory","ensureDir","emptyDir","callback","stats","rawMessages","toJson","warnings","errors","length","reportWebpackWarnings","compilation","formatted","formatWebpackMessages","message","success","run","compiler","ignoreInitial","event","values","log","panic","id","context","end","onCreateDevServer","app","verbose","functionMiddlewares","getFunctions","functions","prepareFn","add","showDebugMessageInResponse"],"sources":["../../../src/internal-plugins/functions/gatsby-node.ts"],"sourcesContent":["import fs from \"fs-extra\"\nimport glob from \"glob\"\nimport path from \"path\"\nimport webpack from \"webpack\"\nimport _ from \"lodash\"\nimport { getMatchPath, urlResolve } from \"gatsby-core-utils\"\nimport { CreateDevServerArgs, ParentSpanPluginArgs } from \"gatsby\"\nimport formatWebpackMessages from \"react-dev-utils/formatWebpackMessages\"\nimport dotenv from \"dotenv\"\nimport chokidar from \"chokidar\"\nimport { reportWebpackWarnings } from \"../../utils/webpack-error-utils\"\nimport { internalActions } from \"../../redux/actions\"\nimport { IGatsbyFunction } from \"../../redux/types\"\nimport { functionMiddlewares } from \"./middleware\"\nimport mod from \"module\"\n\nconst isProductionEnv = process.env.gatsby_executing_command !== `develop`\n\ninterface IGlobPattern {\n  /** The plugin that owns this namespace **/\n  pluginName: string\n  /** The root path to the functions **/\n  rootPath: string\n  /** The glob pattern **/\n  globPattern: string\n  /** The glob ignore pattern */\n  ignorePattern: Array<string>\n}\n\n// During development, we lazily compile functions only when they're requested.\n// Here we keep track of which functions have been requested so are \"active\"\nconst activeDevelopmentFunctions = new Set<IGatsbyFunction>()\nlet activeEntries = {}\n\nasync function ensureFunctionIsCompiled(\n  functionObj: IGatsbyFunction,\n  compiledFunctionsDir: string\n): Promise<any> {\n  // stat the compiled function. If it's there, then return.\n  let compiledFileExists = false\n  try {\n    compiledFileExists = !!(await fs.stat(functionObj.absoluteCompiledFilePath))\n  } catch (e) {\n    // ignore\n  }\n  if (compiledFileExists) {\n    return\n  } else {\n    // Otherwise, restart webpack by touching the file and watch for the file to be\n    // compiled.\n    const time = new Date()\n    fs.utimesSync(functionObj.originalAbsoluteFilePath, time, time)\n    await new Promise(resolve => {\n      const watcher = chokidar\n        // Watch the root of the compiled function directory in .cache as chokidar\n        // can't watch files in directories that don't yet exist.\n        .watch(compiledFunctionsDir)\n        .on(`add`, async _path => {\n          if (_path === functionObj.absoluteCompiledFilePath) {\n            await watcher.close()\n\n            resolve(null)\n          }\n        })\n    })\n  }\n}\n\n// Create glob type w/ glob, plugin name, root path\nconst createGlobArray = (siteDirectoryPath, plugins): Array<IGlobPattern> => {\n  const globs: Array<IGlobPattern> = []\n\n  function globIgnorePatterns(\n    root: string,\n    pluginName?: string\n  ): Array<string> {\n    const nestedFolder = pluginName ? `/${pluginName}/**/` : `/**/`\n\n    return [\n      `${root}/src/api${nestedFolder}__tests__/**/*.+(js|ts)`, // Jest tests\n      `${root}/src/api${nestedFolder}+(*.)+(spec|test).+(js|ts)`,\n      `${root}/src/api${nestedFolder}+(*.)+(d).ts`, // .d.ts files\n    ]\n  }\n\n  // Add the default site src/api directory.\n  globs.push({\n    globPattern: `${siteDirectoryPath}/src/api/**/*.{js,ts}`,\n    ignorePattern: globIgnorePatterns(siteDirectoryPath),\n    rootPath: path.join(siteDirectoryPath, `src/api`),\n    pluginName: `default-site-plugin`,\n  })\n\n  // Add each plugin\n  plugins.forEach(plugin => {\n    // Ignore the \"default\" site plugin (aka the src tree) as we're\n    // already watching that.\n    if (plugin.name === `default-site-plugin`) {\n      return\n    }\n    // Ignore any plugins we include by default. In the very unlikely case\n    // we want to ship default functions, we'll special case add them. In the\n    // meantime, we'll avoid extra FS IO.\n    if (plugin.resolve.includes(`internal-plugin`)) {\n      return\n    }\n    if (plugin.resolve.includes(`gatsby-plugin-typescript`)) {\n      return\n    }\n    if (plugin.resolve.includes(`gatsby-plugin-page-creator`)) {\n      return\n    }\n\n    const glob = {\n      globPattern: `${plugin.resolve}/src/api/${plugin.name}/**/*.{js,ts}`,\n      ignorePattern: globIgnorePatterns(plugin.resolve, plugin.name),\n      rootPath: path.join(plugin.resolve, `src/api`),\n      pluginName: plugin.name,\n    } as IGlobPattern\n    globs.push(glob)\n  })\n\n  // Only return unique paths\n  return _.union(globs)\n}\n\nasync function globAsync(\n  pattern: string,\n  options: glob.IOptions = {}\n): Promise<Array<string>> {\n  return await new Promise((resolve, reject) => {\n    glob(pattern, options, (err, files) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(files)\n      }\n    })\n  })\n}\n\nconst createWebpackConfig = async ({\n  siteDirectoryPath,\n  store,\n  reporter,\n}): Promise<webpack.Configuration> => {\n  const compiledFunctionsDir = path.join(\n    siteDirectoryPath,\n    `.cache`,\n    `functions`\n  )\n\n  const globs = createGlobArray(\n    siteDirectoryPath,\n    store.getState().flattenedPlugins\n  )\n\n  const seenFunctionIds = new Set<string>()\n  // Glob and return object with relative/absolute paths + which plugin\n  // they belong to.\n  const allFunctions = await Promise.all(\n    globs.map(async (glob): Promise<Array<IGatsbyFunction>> => {\n      const knownFunctions: Array<IGatsbyFunction> = []\n      const files = await globAsync(glob.globPattern, {\n        ignore: glob.ignorePattern,\n      })\n      files.map(file => {\n        const originalAbsoluteFilePath = file\n        const originalRelativeFilePath = path.relative(glob.rootPath, file)\n\n        const { dir, name } = path.parse(originalRelativeFilePath)\n        // Ignore the original extension as all compiled functions now end with js.\n        const compiledFunctionName = path.join(dir, name + `.js`)\n        const compiledPath = path.join(\n          compiledFunctionsDir,\n          compiledFunctionName\n        )\n        const finalName = urlResolve(dir, name === `index` ? `` : name)\n\n        // functionId should have only alphanumeric characters and dashes\n        const functionIdBase = _.kebabCase(compiledFunctionName).replace(\n          /[^a-zA-Z0-9-]/g,\n          `-`\n        )\n\n        let functionId = functionIdBase\n\n        if (seenFunctionIds.has(functionId)) {\n          let counter = 2\n          do {\n            functionId = `${functionIdBase}-${counter}`\n            counter++\n          } while (seenFunctionIds.has(functionId))\n        }\n\n        knownFunctions.push({\n          functionRoute: finalName,\n          pluginName: glob.pluginName,\n          originalAbsoluteFilePath,\n          originalRelativeFilePath,\n          relativeCompiledFilePath: compiledFunctionName,\n          absoluteCompiledFilePath: compiledPath,\n          matchPath: getMatchPath(finalName),\n          functionId,\n        })\n      })\n\n      return knownFunctions\n    })\n  )\n\n  // Combine functions by the route name so that functions in the default\n  // functions directory can override the plugin's implementations.\n  // @ts-ignore - Seems like a TS bug: https://github.com/microsoft/TypeScript/issues/28010#issuecomment-713484584\n  const knownFunctions = _.unionBy(...allFunctions, func => func.functionRoute)\n\n  store.dispatch(internalActions.setFunctions(knownFunctions))\n\n  // Write out manifest for use by `gatsby serve` and plugins\n  fs.writeFileSync(\n    path.join(compiledFunctionsDir, `manifest.json`),\n    JSON.stringify(knownFunctions, null, 4)\n  )\n\n  const {\n    config: { pathPrefix },\n    program,\n  } = store.getState()\n\n  // Load environment variables from process.env.* and .env.* files.\n  // Logic is shared with webpack.config.js\n\n  // node env should be DEVELOPMENT | PRODUCTION as these are commonly used in node land\n  const nodeEnv = process.env.NODE_ENV || `development`\n  // config env is dependent on the env that it's run, this can be anything from staging-production\n  // this allows you to set use different .env environments or conditions in gatsby files\n  const configEnv = process.env.GATSBY_ACTIVE_ENV || nodeEnv\n  const envFile = path.join(siteDirectoryPath, `./.env.${configEnv}`)\n  let parsed = {}\n  try {\n    parsed = dotenv.parse(fs.readFileSync(envFile, { encoding: `utf8` }))\n  } catch (err) {\n    if (err.code !== `ENOENT`) {\n      reporter.error(\n        `There was a problem processing the .env file (${envFile})`,\n        err\n      )\n    }\n  }\n\n  const envObject = Object.keys(parsed).reduce((acc, key) => {\n    acc[key] = JSON.stringify(parsed[key])\n    return acc\n  }, {} as Record<string, string>)\n\n  const varsFromProcessEnv = Object.keys(process.env).reduce((acc, key) => {\n    acc[key] = JSON.stringify(process.env[key])\n    return acc\n  }, {} as Record<string, string>)\n\n  // Don't allow overwriting of NODE_ENV, PUBLIC_DIR as to not break gatsby things\n  envObject.NODE_ENV = JSON.stringify(nodeEnv)\n  envObject.PUBLIC_DIR = JSON.stringify(`${siteDirectoryPath}/public`)\n\n  const mergedEnvVars = Object.assign(envObject, varsFromProcessEnv)\n\n  const processEnvVars = Object.keys(mergedEnvVars).reduce(\n    (acc, key) => {\n      acc[`process.env.${key}`] = mergedEnvVars[key]\n      return acc\n    },\n    {\n      \"process.env\": `({})`,\n    }\n  )\n\n  const entries = {}\n\n  const precompileDevFunctions =\n    isProductionEnv ||\n    process.env.GATSBY_PRECOMPILE_DEVELOP_FUNCTIONS === `true` ||\n    process.env.GATSBY_PRECOMPILE_DEVELOP_FUNCTIONS === `1`\n\n  const functionsList = precompileDevFunctions\n    ? knownFunctions\n    : activeDevelopmentFunctions\n\n  functionsList.forEach(functionObj => {\n    // Get path without the extension (as it could be ts or js)\n    const parsedFile = path.parse(functionObj.originalRelativeFilePath)\n    const compiledNameWithoutExtension = path.join(\n      parsedFile.dir,\n      parsedFile.name\n    )\n\n    let entryToTheFunction = functionObj.originalAbsoluteFilePath\n    // we wrap user defined function with our preamble that handles matchPath as well as body parsing\n    // see api-function-webpack-loader.ts for more info\n    entryToTheFunction += `?matchPath=` + (functionObj.matchPath ?? ``)\n    entries[compiledNameWithoutExtension] = entryToTheFunction\n  })\n\n  activeEntries = entries\n\n  const stage = isProductionEnv\n    ? `functions-production`\n    : `functions-development`\n\n  const gatsbyPluginTSRequire = mod.createRequire(\n    require.resolve(`gatsby-plugin-typescript`)\n  )\n\n  return {\n    entry: entries,\n    output: {\n      path: compiledFunctionsDir,\n      filename: `[name].js`,\n      libraryTarget: `commonjs2`,\n    },\n    target: `node`,\n\n    // Minification is expensive and not as helpful for serverless functions.\n    optimization: {\n      minimize: false,\n    },\n\n    // Resolve files ending with .ts and the default extensions of .js, .json, .wasm\n    resolve: {\n      extensions: [`.ts`, `...`],\n    },\n\n    // Have webpack save its cache to the .cache/webpack directory\n    cache: {\n      type: `filesystem`,\n      name: stage,\n      cacheLocation: path.join(\n        siteDirectoryPath,\n        `.cache`,\n        `webpack`,\n        `stage-` + stage\n      ),\n    },\n\n    mode: isProductionEnv ? `production` : `development`,\n    // watch: !isProductionEnv,\n    module: {\n      rules: [\n        // Webpack expects extensions when importing ESM modules as that's what the spec describes.\n        // Not all libraries have adapted so we don't enforce its behaviour\n        // @see https://github.com/webpack/webpack/issues/11467\n        {\n          test: /\\.[tj]sx?$/,\n          resourceQuery: /matchPath/,\n          use: {\n            loader: require.resolve(`./api-function-webpack-loader`),\n          },\n        },\n        {\n          test: /\\.mjs$/i,\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n        },\n        {\n          test: /\\.js$/i,\n          descriptionData: {\n            type: `module`,\n          },\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n          use: {\n            loader: require.resolve(`babel-loader`),\n            options: {\n              presets: [\n                gatsbyPluginTSRequire.resolve(`@babel/preset-typescript`),\n              ],\n            },\n          },\n        },\n        {\n          test: [/.js$/, /.ts$/],\n          exclude: /node_modules/,\n          use: {\n            loader: require.resolve(`babel-loader`),\n            options: {\n              presets: [\n                gatsbyPluginTSRequire.resolve(`@babel/preset-typescript`),\n              ],\n            },\n          },\n        },\n      ],\n    },\n    plugins: [\n      new webpack.DefinePlugin({\n        PREFIX_TO_STRIP: JSON.stringify(\n          program.prefixPaths ? pathPrefix?.replace(/(^\\/+|\\/+$)/g, ``) : ``\n        ),\n        ...processEnvVars,\n      }),\n      new webpack.IgnorePlugin({\n        checkResource(resource): boolean {\n          if (resource === `lmdb`) {\n            reporter.warn(\n              `LMDB and other modules with native dependencies are not supported in Gatsby Functions.\\nIf you are importing utils from \\`gatsby-core-utils\\`, make sure to import from a specific module (for example \\`gatsby-core-utils/create-content-digest\\`).`\n            )\n            return true\n          }\n          return false\n        },\n      }),\n    ],\n  }\n}\n\nlet isFirstBuild = true\nexport async function onPreBootstrap({\n  reporter,\n  store,\n  parentSpan,\n}: ParentSpanPluginArgs): Promise<void> {\n  const activity = reporter.activityTimer(`Compiling Gatsby Functions`, {\n    parentSpan,\n  })\n  activity.start()\n\n  const {\n    program: { directory: siteDirectoryPath },\n  } = store.getState()\n\n  const compiledFunctionsDir = path.join(\n    siteDirectoryPath,\n    `.cache`,\n    `functions`\n  )\n\n  await fs.ensureDir(compiledFunctionsDir)\n  await fs.emptyDir(compiledFunctionsDir)\n\n  try {\n    // We do this ungainly thing as we need to make accessible\n    // the resolve/reject functions to our shared callback function\n    // eslint-disable-next-line\n    await new Promise<any>(async (resolve, reject) => {\n      const config = await createWebpackConfig({\n        siteDirectoryPath,\n        store,\n        reporter,\n      })\n\n      function callback(err, stats?: webpack.Stats): void {\n        const rawMessages = stats?.toJson({\n          all: false,\n          warnings: true,\n          errors: true,\n        })\n        if (rawMessages?.warnings && rawMessages.warnings.length > 0) {\n          reportWebpackWarnings(rawMessages.warnings, reporter)\n        }\n\n        if (err) return reject(err)\n        const errors = stats?.compilation.errors || []\n\n        // If there's errors, reject in production and print to the console\n        // in development.\n        if (isProductionEnv) {\n          if (errors.length > 0) return reject(errors)\n        } else {\n          const formatted = formatWebpackMessages({\n            errors: rawMessages?.errors\n              ? rawMessages.errors.map(e => e.message)\n              : [],\n            warnings: [],\n          })\n          reporter.error(formatted.errors)\n        }\n\n        // Log success in dev\n        if (!isProductionEnv) {\n          if (isFirstBuild) {\n            isFirstBuild = false\n          } else {\n            reporter.success(`Re-building functions`)\n          }\n        }\n\n        return resolve(null)\n      }\n\n      if (isProductionEnv) {\n        webpack(config).run(callback)\n      } else {\n        // When in watch mode, you call things differently\n        let compiler = webpack(config).watch({}, callback)\n\n        const globs = createGlobArray(\n          siteDirectoryPath,\n          store.getState().flattenedPlugins\n        )\n\n        // Watch for env files to change and restart the webpack watcher.\n        chokidar\n          .watch(\n            [\n              `${siteDirectoryPath}/.env*`,\n              ...globs.map(glob => glob.globPattern),\n            ],\n            { ignoreInitial: true }\n          )\n          .on(`all`, async (event, path) => {\n            // Ignore change events from the API directory for functions we're\n            // already watching.\n            if (\n              event === `change` &&\n              Object.values(activeEntries).includes(path) &&\n              path.includes(`/src/api/`)\n            ) {\n              return\n            }\n\n            reporter.log(\n              `Restarting function watcher due to change to \"${path}\"`\n            )\n\n            // Otherwise, restart the watcher\n            compiler.close(async () => {\n              const config = await createWebpackConfig({\n                siteDirectoryPath,\n                store,\n                reporter,\n              })\n              compiler = webpack(config).watch({}, callback)\n            })\n          })\n      }\n    })\n  } catch (error) {\n    activity.panic({\n      id: `11332`,\n      error,\n      context: {},\n    })\n  }\n\n  activity.end()\n}\n\nexport async function onCreateDevServer({\n  reporter,\n  app,\n  store,\n}: CreateDevServerArgs): Promise<void> {\n  reporter.verbose(`Attaching functions to development server`)\n\n  const {\n    program: { directory: siteDirectoryPath },\n  } = store.getState()\n\n  const compiledFunctionsDir = path.join(\n    siteDirectoryPath,\n    `.cache`,\n    `functions`\n  )\n\n  app.use(\n    `/api/*`,\n    ...functionMiddlewares({\n      getFunctions(): Array<IGatsbyFunction> {\n        const { functions }: { functions: Array<IGatsbyFunction> } =\n          store.getState()\n        return functions\n      },\n      async prepareFn(functionObj: IGatsbyFunction): Promise<void> {\n        activeDevelopmentFunctions.add(functionObj)\n        await ensureFunctionIsCompiled(functionObj, compiledFunctionsDir)\n      },\n      showDebugMessageInResponse: true,\n    })\n  )\n}\n"],"mappings":"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"}