/**
 * Truncate `tree` to a certain comment.
 *
 * @template {Node} Tree
 *   Type of tree.
 * @param {Tree} tree
 *   Tree to truncate.
 * @param {Options | null | undefined} [options]
 *   Configuration (optional)
 * @returns {Tree | undefined}
 *   Truncated copy of `tree` when a comment is found, `undefined` otherwise.
 */
export function excerpt<Tree extends Node>(
  tree: Tree,
  options?: Options | null | undefined
): Tree | undefined
export type Root = import('hast').Root
export type Content = import('hast').Content
export type Node = Root | Content
/**
 * Configuration.
 */
export type Options = {
  /**
   * Comment value to search for.
   */
  comment?: string | null | undefined
  /**
   * How far to search for the comment before bailing.
   * The goal of this project is to find user-defined explicit excerpts, that
   * are assumed to be somewhat reasonably placed.
   * This option prevents searching giant documents for some comment
   * that probably wonâ€™t be found at the end.
   */
  maxSearchSize?: number | null | undefined
  /**
   * Nodes to exclude from the resulting tree.
   * These are not counted towards `size`.
   */
  ignore?: Array<Content> | null | undefined
}
