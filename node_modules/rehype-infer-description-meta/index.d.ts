/**
 * Plugin to infer file metadata from the document.
 *
 * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}
 */
export default function rehypeInferDescriptionMeta(
  options?: void | Options | undefined
):
  | void
  | import('unified').Transformer<import('hast').Root, import('hast').Root>
export type DoNotTouchThisAsItIncludesAugmentation =
  typeof import('./complex-types.js')
export type Root = import('hast').Root
export type Element = import('hast').Element
/**
 * Configuration.
 */
export type Options = {
  /**
   * CSS selector to the description.
   * One of the strategies is to look for a certain element, useful if the
   * description is nicely encoded in one element.
   */
  selector?: string | undefined
  /**
   * String to look for in a comment.
   * One of the strategies is to look for this comment, everything before it is
   * the description.
   */
  comment?: string | undefined
  /**
   * Number of characters to truncate to.
   * One of the strategies is to truncate the document to a certain number of
   * characters.
   */
  truncateSize?: number | undefined
  /**
   * CSS selector to body of content.
   * Useful to exclude other things, such as the head, ads, styles, scripts, and
   * other random stuff, by focussing all strategies in one element.
   */
  mainSelector?: string | undefined
  /**
   * CSS selector of nodes to ignore.
   * Used when looking for an excerpt comment or truncating the document.
   */
  ignoreSelector?: string | undefined
  /**
   * How far to search for the excerpt comment before bailing.
   * The goal of explicit excerpts is that they are assumed to be somewhat
   * reasonably placed.
   * This option prevents searching giant documents for some comment that
   * probably wonâ€™t be found at the end.
   */
  maxExcerptSearchSize?: number | undefined
  /**
   * Whether to expose `file.data.meta.descriptionHast`.
   * This is not used by `rehype-meta`, but could be useful to other plugins.
   */
  inferDescriptionHast?: boolean | undefined
}
